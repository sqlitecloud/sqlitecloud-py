{
  "errors": [],
  "generated_at": "2024-08-19T12:33:05Z",
  "metrics": {
    "_totals": {
      "CONFIDENCE.HIGH": 16.0,
      "CONFIDENCE.LOW": 3.0,
      "CONFIDENCE.MEDIUM": 12.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 17.0,
      "SEVERITY.MEDIUM": 14.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 4633,
      "nosec": 0
    },
    "src/setup.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 29,
      "nosec": 0
    },
    "src/sqlitecloud/__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 26,
      "nosec": 0
    },
    "src/sqlitecloud/client.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 103,
      "nosec": 0
    },
    "src/sqlitecloud/datatypes.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 1.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 178,
      "nosec": 0
    },
    "src/sqlitecloud/dbapi2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 623,
      "nosec": 0
    },
    "src/sqlitecloud/download.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 32,
      "nosec": 0
    },
    "src/sqlitecloud/driver.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 818,
      "nosec": 0
    },
    "src/sqlitecloud/pubsub.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 56,
      "nosec": 0
    },
    "src/sqlitecloud/resultset.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 111,
      "nosec": 0
    },
    "src/sqlitecloud/upload.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 51,
      "nosec": 0
    },
    "src/tests/__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "src/tests/conftest.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 77,
      "nosec": 0
    },
    "src/tests/integration/__init__.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 0,
      "nosec": 0
    },
    "src/tests/integration/test_client.py": {
      "CONFIDENCE.HIGH": 1.0,
      "CONFIDENCE.LOW": 1.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 1.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 557,
      "nosec": 0
    },
    "src/tests/integration/test_dbapi2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 189,
      "nosec": 0
    },
    "src/tests/integration/test_download.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 21,
      "nosec": 0
    },
    "src/tests/integration/test_driver.py": {
      "CONFIDENCE.HIGH": 4.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 4.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 86,
      "nosec": 0
    },
    "src/tests/integration/test_pandas.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 50,
      "nosec": 0
    },
    "src/tests/integration/test_pubsub.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 1.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 129,
      "nosec": 0
    },
    "src/tests/integration/test_sqlite3_parity.py": {
      "CONFIDENCE.HIGH": 11.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 11.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 11.0,
      "SEVERITY.MEDIUM": 11.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 840,
      "nosec": 0
    },
    "src/tests/integration/test_upload.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 1.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 1.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 20,
      "nosec": 0
    },
    "src/tests/unit/test_client.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 48,
      "nosec": 0
    },
    "src/tests/unit/test_dbapi2.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 263,
      "nosec": 0
    },
    "src/tests/unit/test_driver.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 213,
      "nosec": 0
    },
    "src/tests/unit/test_resultset.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 99,
      "nosec": 0
    },
    "src/tests/unit/test_types.py": {
      "CONFIDENCE.HIGH": 0.0,
      "CONFIDENCE.LOW": 0.0,
      "CONFIDENCE.MEDIUM": 0.0,
      "CONFIDENCE.UNDEFINED": 0.0,
      "SEVERITY.HIGH": 0.0,
      "SEVERITY.LOW": 0.0,
      "SEVERITY.MEDIUM": 0.0,
      "SEVERITY.UNDEFINED": 0.0,
      "loc": 14,
      "nosec": 0
    }
  },
  "results": [
    {
      "code": "91 class SQLiteCloudAccount:\n92     def __init__(\n93         self,\n94         username: Optional[str] = \"\",\n95         password: Optional[str] = \"\",\n96         hostname: str = \"\",\n97         dbname: Optional[str] = \"\",\n98         port: int = SQLITECLOUD_DEFAULT.PORT.value,\n99         apikey: Optional[str] = \"\",\n100     ) -> None:\n101         # User name is required unless connectionstring is provided\n102         self.username = username\n103         # Password is required unless connection string is provided\n104         self.password = password\n105         # Password is hashed\n106         self.password_hashed = False\n107         # API key instead of username and password\n108         self.apikey = apikey\n109         # Name of database to open\n110         self.dbname = dbname\n111         # Like mynode.sqlitecloud.io\n112         self.hostname = hostname\n113         self.port = port\n114 \n",
      "col_offset": 4,
      "filename": "src/sqlitecloud/datatypes.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: ''",
      "line_number": 92,
      "line_range": [
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        110,
        111,
        112,
        113
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b107_hardcoded_password_default.html",
      "test_id": "B107",
      "test_name": "hardcoded_password_default"
    },
    {
      "code": "644 \n645         table_name = \"TestCompress\" + str(random.randint(0, 99999))\n646         try:\n",
      "col_offset": 42,
      "filename": "src/tests/integration/test_client.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 645,
      "line_range": [
        645
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "660             rowset = client.exec_query(\n661                 f\"SELECT * from {table_name}\",\n662                 connection,\n",
      "col_offset": 16,
      "filename": "src/tests/integration/test_client.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 661,
      "line_range": [
        661
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "50 \n51         name = \"MyGenre\" + str(random.randint(0, 1000))\n52         query = \"INSERT INTO genres (Name) VALUES (?)\"\n",
      "col_offset": 31,
      "filename": "src/tests/integration/test_driver.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 51,
      "line_range": [
        51
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "73 \n74         name = \"MyGenre\" + str(random.randint(0, 1000))\n75         result_insert = driver.execute_statement(\n",
      "col_offset": 31,
      "filename": "src/tests/integration/test_driver.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 74,
      "line_range": [
        74
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "95 \n96         name = \"MyGenre\" + str(random.randint(0, 1000))\n97         result_insert = driver.execute_statement(\n",
      "col_offset": 31,
      "filename": "src/tests/integration/test_driver.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 96,
      "line_range": [
        96
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "100 \n101         new_name = \"AnotherMyGenre\" + str(random.randint(0, 1000))\n102         result = driver.execute_statement(\n",
      "col_offset": 42,
      "filename": "src/tests/integration/test_driver.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 101,
      "line_range": [
        101
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "179         client.exec_query(\n180             f\"UPDATE genres SET Name = '{new_name}' WHERE GenreId = 1;\", connection\n181         )\n",
      "col_offset": 12,
      "filename": "src/tests/integration/test_pubsub.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 180,
      "line_range": [
        180
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "524 \n525         tableName = \"TestTextFactory\" + str(random.randint(0, 99999))\n526         try:\n",
      "col_offset": 44,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 525,
      "line_range": [
        525
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "529             cursor.execute(f\"INSERT INTO {tableName}(p) VALUES (?)\", (15,))\n530             cursor.execute(f\"SELECT p FROM {tableName}\")\n531 \n",
      "col_offset": 27,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 530,
      "line_range": [
        530
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "553 \n554         tableName = \"TestTextFactory\" + str(random.randint(0, 99999))\n555         try:\n",
      "col_offset": 44,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 554,
      "line_range": [
        554
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "558             cursor.execute(f\"INSERT INTO {tableName}(p) VALUES (?)\", (\"15\",))\n559             cursor.execute(f\"SELECT p FROM {tableName}\")\n560 \n",
      "col_offset": 27,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 559,
      "line_range": [
        559
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "615 \n616         tableName = \"TestParseDeclTypes\" + str(random.randint(0, 99999))\n617         try:\n",
      "col_offset": 47,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 616,
      "line_range": [
        616
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "620             cursor.executemany(f\"INSERT INTO {tableName}(p) VALUES (?)\", [(p1,), (p2,)])\n621             cursor.execute(f\"SELECT p FROM {tableName}\")\n622 \n",
      "col_offset": 27,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 621,
      "line_range": [
        621
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "804 \n805         tableName = \"TestParseDeclTypes\" + str(random.randint(0, 99999))\n806         try:\n",
      "col_offset": 47,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 805,
      "line_range": [
        805
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "809             cursor.execute(f\"INSERT INTO {tableName}(p) VALUES (?)\", (str(p),))\n810             cursor.execute(f\"SELECT p FROM {tableName}\")\n811 \n",
      "col_offset": 27,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 810,
      "line_range": [
        810
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "829 \n830         tableName = \"TestParseDeclTypes\" + str(random.randint(0, 99999))\n831         try:\n",
      "col_offset": 47,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 830,
      "line_range": [
        830
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "834             cursor.execute(f\"INSERT INTO {tableName}(p) VALUES (?)\", (\"1.0,2.0\",))\n835             cursor.execute(f\"SELECT p FROM {tableName}\")\n836 \n",
      "col_offset": 27,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 835,
      "line_range": [
        835
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "856 \n857         tableName = \"TestParseDeclTypes\" + str(random.randint(0, 99999))\n858         try:\n",
      "col_offset": 47,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 857,
      "line_range": [
        857
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "861             cursor.execute(f\"INSERT INTO {tableName}(p) VALUES (?)\", (mynumber,))\n862             cursor.execute(f\"SELECT p FROM {tableName}\")\n863 \n",
      "col_offset": 27,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 862,
      "line_range": [
        862
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "887 \n888         tableName = \"TestParseDeclTypes\" + str(random.randint(0, 99999))\n889         try:\n",
      "col_offset": 47,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 888,
      "line_range": [
        888
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "892             cursor.execute(f\"INSERT INTO {tableName}(p) VALUES (?)\", (pippo,))\n893             cursor.execute(f\"SELECT p FROM {tableName}\")\n894 \n",
      "col_offset": 27,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 893,
      "line_range": [
        893
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "914 \n915         tableName = \"TestParseDeclTypes\" + str(random.randint(0, 99999))\n916         try:\n",
      "col_offset": 47,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 915,
      "line_range": [
        915
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "919             cursor.execute(f\"INSERT INTO {tableName}(p) VALUES (?)\", (mynumber,))\n920             cursor.execute(f\"SELECT p FROM {tableName}\")\n921 \n",
      "col_offset": 27,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 920,
      "line_range": [
        920
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "939 \n940         tableName = \"TestParseDeclTypes\" + str(random.randint(0, 99999))\n941         try:\n",
      "col_offset": 47,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 940,
      "line_range": [
        940
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "952             )\n953             cursor.execute(f\"SELECT d, t FROM {tableName}\")\n954 \n",
      "col_offset": 27,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 953,
      "line_range": [
        953
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "989 \n990         tableName = \"TestParseDeclTypes\" + str(random.randint(0, 99999))\n991         try:\n",
      "col_offset": 47,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 990,
      "line_range": [
        990
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "995             cursor.execute(f\"INSERT INTO {tableName}(p) VALUES (?)\", (p,))\n996             cursor.execute(f\"SELECT p FROM {tableName}\")\n997 \n",
      "col_offset": 27,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 996,
      "line_range": [
        996
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "1070 \n1071         tableName = \"TestParseColnames\" + str(random.randint(0, 99999))\n1072         try:\n",
      "col_offset": 46,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "HIGH",
      "issue_severity": "LOW",
      "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
      "line_number": 1071,
      "line_range": [
        1071
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random",
      "test_id": "B311",
      "test_name": "blacklist"
    },
    {
      "code": "1076             cursor.execute(f\"INSERT INTO {tableName}(p) VALUES (?)\", (str(p),))\n1077             cursor.execute(f'SELECT p, p \"lat lng [coordinate]\" FROM {tableName}')\n1078 \n",
      "col_offset": 27,
      "filename": "src/tests/integration/test_sqlite3_parity.py",
      "issue_confidence": "MEDIUM",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 1077,
      "line_range": [
        1077
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "18             rowset = client.exec_query(\n19                 f\"USE DATABASE {dbname}; SELECT * FROM contacts\", connection\n20             )\n",
      "col_offset": 16,
      "filename": "src/tests/integration/test_upload.py",
      "issue_confidence": "LOW",
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 19,
      "line_range": [
        19
      ],
      "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    }
  ]
}
